CREATE OR ALTER PROCEDURE [principal].[proc_AddOrUpdateUserPrincipal]
	@json     nvarchar(max),
    @isActive bit = 1
AS
BEGIN

    DECLARE @timestamp datetime2(7) = GETUTCDATE()

    ;WITH users AS
    (
        SELECT
            AccountEnabled, 
            City, 
            CompanyName, 
            Country, 
            CreatedDateTime,
            CreationType,
            DeletedDateTime,
            Department, 
            DisplayName,
            EmployeeId,
            EmployeeType,
            ExternalUserState,
            ExternalUserStateChangeDateTime,
            FirstName,
            JobTitle,
            LastName,
            LastPasswordChangeDateTime,
            Mail, 
            MailNickname,
            Manager,
            MobilePhone, 
            MySite,
            ObjectId,
            OfficeLocation, 
            OnPremisesDistinguishedName,
            OnPremisesDomainName, 
            OnPremisesImmutableId,
            OnPremisesLastSyncDateTime, 
            OnPremisesSamAccountName,
            OnPremisesSecurityIdentifier, 
            OnPremisesSyncEnabled, 
            OnPremisesUserPrincipalName,
            PostalCode, 
            PreferredDataLocation, 
            PreferredLanguage, 
            PrincipalType = PrincipalType.Id,
            [State],
            StreetAddress,
            UsageLocation,
            UserPrincipalName,
            RowUpdated = @timestamp,
            RowCreated = @timestamp
        FROM 
            OPENJSON (@json, N'$') WITH 
            (
                AccountEnabled                  bit              N'$.AccountEnabled',
                City                            nvarchar(100)    N'$.City',
                CompanyName                     nvarchar(100)    N'$.CompanyName',
                Country                         nvarchar(100)    N'$.Country',
                CreatedDateTime                 datetime2(7)     N'$.CreatedDateTime',
                CreationType                    nvarchar(100)    N'$.CreationType',
                DeletedDateTime                 datetime2(7)     N'$.DeletedDateTime',
                Department                      nvarchar(100)    N'$.Department',
                DisplayName                     nvarchar(100)    N'$.DisplayName',
                EmployeeId                      nvarchar(100)    N'$.EmployeeId',
                EmployeeType                    nvarchar(100)    N'$.EmployeeType',
                ExternalUserState               nvarchar(100)    N'$.ExternalUserState',
                ExternalUserStateChangeDateTime datetime2(7)     N'$.ExternalUserStateChangeDateTime',
                FirstName                       nvarchar(100)    N'$.FirstName',
                JobTitle                        nvarchar(100)    N'$.JobTitle',
                LastName                        nvarchar(100)    N'$.Surname',
                LastPasswordChangeDateTime      datetime2(7)     N'$.LastPasswordChangeDateTime',
                Mail                            nvarchar(100)    N'$.Mail',
                MailNickname                    nvarchar(100)    N'$.MailNickname',
                Manager                         uniqueidentifier N'$.Manager',
                MobilePhone                     nvarchar(100)    N'$.MobilePhone',
                MySite                          nvarchar(400)    N'$.MySite',
                ObjectId                        uniqueidentifier N'$.Id',
                OfficeLocation                  nvarchar(100)    N'$.OfficeLocation',
                OnPremisesDistinguishedName     nvarchar(100)    N'$.OnPremisesDistinguishedName',
                OnPremisesDomainName            nvarchar(100)    N'$.OnPremisesDomainName',
                OnPremisesImmutableId           nvarchar(100)    N'$.OnPremisesImmutableId',
                OnPremisesLastSyncDateTime      datetime2(7)     N'$.OnPremisesLastSyncDateTime',
                OnPremisesSamAccountName        nvarchar(100)    N'$.OnPremisesSamAccountName',
                OnPremisesSecurityIdentifier    nvarchar(100)    N'$.OnPremisesSecurityIdentifier',
                OnPremisesSyncEnabled           bit              N'$.OnPremisesSyncEnabled',
                OnPremisesUserPrincipalName     nvarchar(100)    N'$.OnPremisesUserPrincipalName',
                PostalCode                      nvarchar(100)    N'$.PostalCode',
                PreferredDataLocation           nvarchar(100)    N'$.PreferredDataLocation',
                PreferredLanguage               nvarchar(100)    N'$.PreferredLanguage',
                [State]                         nvarchar(100)    N'$.State',
                StreetAddress                   nvarchar(200)    N'$.StreetAddress',
                UsageLocation                   nvarchar(100)    N'$.UsageLocation',
                UserPrincipalName               nvarchar(100)    N'$.UserPrincipalName',
                UserType                        nvarchar(100)    N'$.UserType'
            ) AS [json]
            LEFT JOIN 
                principal.PrincipalType ON json.UserType = PrincipalType.PrincipalType
    )

    MERGE INTO principal.UserPrincipal AS Existing
    USING users AS New
    ON New.ObjectId = Existing.ObjectId
    WHEN MATCHED THEN
        UPDATE SET
            Existing.AccountEnabled                  = ISNULL(New.AccountEnabled,                  Existing.AccountEnabled), 
            Existing.City                            = ISNULL(New.City,                            Existing.City), 
            Existing.CompanyName                     = ISNULL(New.CompanyName,                     Existing.CompanyName), 
            Existing.Country                         = ISNULL(New.Country,                         Existing.Country), 
            Existing.CreatedDateTime                 = ISNULL(New.CreatedDateTime,                 Existing.CreatedDateTime), 
            Existing.CreationType                    = ISNULL(New.CreationType,                    Existing.CreationType), 
            Existing.DeletedDateTime                 = CASE WHEN @isActive = 1 THEN NULL ELSE ISNULL(New.CreationType, Existing.CreationType) END,
            Existing.Department                      = ISNULL(New.Department,                      Existing.Department), 
            Existing.DisplayName                     = ISNULL(New.DisplayName,                     Existing.DisplayName), 
            Existing.EmployeeId                      = ISNULL(New.EmployeeId,                      Existing.EmployeeId), 
            Existing.EmployeeType                    = ISNULL(New.EmployeeType,                    Existing.EmployeeType), 
            Existing.ExternalUserState               = ISNULL(New.ExternalUserState,               Existing.ExternalUserState), 
            Existing.ExternalUserStateChangeDateTime = ISNULL(New.ExternalUserStateChangeDateTime, Existing.ExternalUserStateChangeDateTime), 
            Existing.FirstName                       = ISNULL(New.FirstName,                       Existing.FirstName), 
            Existing.JobTitle                        = ISNULL(New.JobTitle,                        Existing.JobTitle), 
            Existing.LastName                        = ISNULL(New.LastName,                        Existing.LastName), 
            Existing.LastPasswordChangeDateTime      = ISNULL(New.LastPasswordChangeDateTime,      Existing.LastPasswordChangeDateTime), 
            Existing.Mail                            = ISNULL(New.Mail,                            Existing.Mail), 
            Existing.MailNickname                    = ISNULL(New.MailNickname,                    Existing.MailNickname), 
            Existing.Manager                         = ISNULL(New.Manager,                         Existing.Manager), 
            Existing.MobilePhone                     = ISNULL(New.MobilePhone,                     Existing.MobilePhone), 
            Existing.MySite                          = ISNULL(New.MySite,                          Existing.MySite), 
            Existing.OfficeLocation                  = ISNULL(New.OfficeLocation,                  Existing.OfficeLocation), 
            Existing.OnPremisesDistinguishedName     = ISNULL(New.OnPremisesDistinguishedName,     Existing.OnPremisesDistinguishedName), 
            Existing.OnPremisesDomainName            = ISNULL(New.OnPremisesDomainName,            Existing.OnPremisesDomainName), 
            Existing.OnPremisesImmutableId           = ISNULL(New.OnPremisesImmutableId,           Existing.OnPremisesImmutableId), 
            Existing.OnPremisesLastSyncDateTime      = ISNULL(New.OnPremisesLastSyncDateTime,      Existing.OnPremisesLastSyncDateTime), 
            Existing.OnPremisesSamAccountName        = ISNULL(New.OnPremisesSamAccountName,        Existing.OnPremisesSamAccountName), 
            Existing.OnPremisesSecurityIdentifier    = ISNULL(New.OnPremisesSecurityIdentifier,    Existing.OnPremisesSecurityIdentifier), 
            Existing.OnPremisesSyncEnabled           = ISNULL(New.OnPremisesSyncEnabled,           Existing.OnPremisesSyncEnabled), 
            Existing.OnPremisesUserPrincipalName     = ISNULL(New.OnPremisesUserPrincipalName,     Existing.OnPremisesUserPrincipalName), 
            Existing.PostalCode                      = ISNULL(New.PostalCode,                      Existing.PostalCode), 
            Existing.PreferredDataLocation           = ISNULL(New.PreferredDataLocation,           Existing.PreferredDataLocation), 
            Existing.PreferredLanguage               = ISNULL(New.PreferredLanguage,               Existing.PreferredLanguage), 
            Existing.PrincipalType                   = ISNULL(New.PrincipalType,                   Existing.PrincipalType), 
            Existing.State                           = ISNULL(New.State,                           Existing.State), 
            Existing.StreetAddress                   = ISNULL(New.StreetAddress,                   Existing.StreetAddress), 
            Existing.UsageLocation                   = ISNULL(New.UsageLocation,                   Existing.UsageLocation), 
            Existing.UserPrincipalName               = ISNULL(New.UserPrincipalName,               Existing.UserPrincipalName), 
            Existing.RowUpdated                      = New.RowUpdated
    WHEN NOT MATCHED THEN
        INSERT
        (
            AccountEnabled, 
            City, 
            CompanyName, 
            Country, 
            CreatedDateTime, 
            CreationType,
            DeletedDateTime,
            Department, 
            DisplayName, 
            EmployeeId, 
            EmployeeType, 
            ExternalUserState, 
            ExternalUserStateChangeDateTime, 
            FirstName, 
            JobTitle, 
            LastName,
            LastPasswordChangeDateTime,
            Mail, 
            MailNickname,
            Manager,
            MobilePhone, 
            MySite,
            ObjectId,
            OfficeLocation, 
            OnPremisesDistinguishedName,
            OnPremisesDomainName,
            OnPremisesImmutableId,
            OnPremisesLastSyncDateTime,
            OnPremisesSamAccountName,
            OnPremisesSecurityIdentifier, 
            OnPremisesSyncEnabled,
            OnPremisesUserPrincipalName,
            PostalCode, 
            PreferredDataLocation, 
            PreferredLanguage, 
            PrincipalType,
            [State],
            StreetAddress,
            UsageLocation,
            UserPrincipalName,
            RowCreated,        
            RowUpdated      
        )
        VALUES 
        (
            AccountEnabled, 
            City, 
            CompanyName, 
            Country, 
            CreatedDateTime, 
            CreationType,
            DeletedDateTime,
            Department, 
            DisplayName, 
            EmployeeId, 
            EmployeeType, 
            ExternalUserState, 
            ExternalUserStateChangeDateTime, 
            FirstName, 
            JobTitle, 
            LastName,
            LastPasswordChangeDateTime,
            Mail, 
            MailNickname,
            Manager,
            MobilePhone, 
            MySite,
            ObjectId,
            OfficeLocation, 
            OnPremisesDistinguishedName,
            OnPremisesDomainName,
            OnPremisesImmutableId,
            OnPremisesLastSyncDateTime,
            OnPremisesSamAccountName,
            OnPremisesSecurityIdentifier, 
            OnPremisesSyncEnabled,
            OnPremisesUserPrincipalName,
            PostalCode, 
            PreferredDataLocation, 
            PreferredLanguage, 
            PrincipalType,
            [State],
            StreetAddress,
            UsageLocation,
            UserPrincipalName,
            RowCreated,        
            RowUpdated
        );
END